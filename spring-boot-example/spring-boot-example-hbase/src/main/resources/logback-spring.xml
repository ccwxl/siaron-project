<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- Console log output -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <springProperty scope="context" name="APP_NAME" source="spring.application.name" defaultValue="spring-boot-example-drools"/>
    <springProperty scope="context" name="LOGGER_LEVEL" source="logging.level.root" defaultValue="INFO"/>

    <property name="DEFAULT_LOG_PATH" value="/opt/nvr-cloud-logger"/>

    <property name="OS_NAME" value="${os.name}"/>
    <if condition='property("OS_NAME").contains("Windows")'>
        <then>
            <property name="LOG_PATH" value="${LOG_PATH:-D:${DEFAULT_LOG_PATH}}"/>
        </then>
        <else>
            <property name="LOG_PATH" value="${LOG_PATH:-${DEFAULT_LOG_PATH}}"/>
        </else>
    </if>

    <property name="APP_NAME" value="${APP_NAME:-tmp}"/>

    <property name="LOG_FILE"
              value="${LOG_PATH}/${APP_NAME}/${APP_NAME}_logger.%d{yyyy-MM-dd}.log"/>

    <appender name="fileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_FILE}</FileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="fileAppender"/>
    </appender>

    <root level="${LOGGER_LEVEL}">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="fileAppender"/>
    </root>

</configuration>